{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendBtcTransaction = void 0;\nconst jsontokens_1 = require(\"jsontokens\");\nconst provider_1 = require(\"../provider\");\nconst serializer = recipient => {\n  return recipient.map(value => {\n    const {\n      address,\n      amountSats\n    } = value;\n    return {\n      address,\n      amountSats: amountSats.toString()\n    };\n  });\n};\nconst sendBtcTransaction = async options => {\n  const provider = await (0, provider_1.getProviderOrThrow)(options.getProvider);\n  const {\n    recipients,\n    senderAddress,\n    network,\n    message\n  } = options.payload;\n  if (!recipients || recipients.length === 0) {\n    throw new Error('At least one recipient is required');\n  }\n  if (recipients.some(item => typeof item.address !== 'string' || typeof item.amountSats !== 'bigint')) {\n    throw new Error('Incorrect recipient format');\n  }\n  if (!senderAddress) {\n    throw new Error('The sender address is required');\n  }\n  try {\n    const serializedRecipients = serializer(recipients);\n    const serializedPayload = {\n      network,\n      senderAddress,\n      message,\n      recipients: serializedRecipients\n    };\n    const request = (0, jsontokens_1.createUnsecuredToken)(serializedPayload);\n    const response = await provider.sendBtcTransaction(request);\n    options.onFinish?.(response);\n  } catch (error) {\n    console.error('[Connect] Error during send BTC transaction request', error);\n    options.onCancel?.();\n  }\n};\nexports.sendBtcTransaction = sendBtcTransaction;\n//# sourceMappingURL=sendBtcTransaction.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}