{"ast":null,"code":"var _jsxFileName = \"/Users/metehan/Downloads/ord/sats-connect-example-main 2/src/components/createFileInscription.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createInscription } from \"sats-connect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateBinaryInscription = ({\n  network,\n  capabilities\n}) => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [contentType, setContentType] = useState(\"image/jpeg\");\n  const onCreateClick = async () => {\n    try {\n      await createInscription({\n        payload: {\n          network: {\n            type: network\n          },\n          contentType,\n          content,\n          payloadType: \"BASE_64\"\n          /** Optional parameters:\n          appFeeAddress, // the address where the inscription fee should go\n          appFee: 1000 // the amount of sats that should be sent to the fee address\n          */\n        },\n\n        onFinish: response => {\n          alert(response.txId);\n        },\n        onCancel: () => alert(\"Canceled\")\n      });\n    } catch (error) {\n      alert(`An error ocurred: ${error.message}`);\n    }\n  };\n  const onFileSelect = e => {\n    var _e$target$files;\n    const selectedFile = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!selectedFile) {\n      setContent(\"\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => {\n      var _e$target;\n      const contentString = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n      if (!contentString) {\n        return;\n      }\n      const base64String = contentString.split(\",\")[1];\n      setContent(base64String);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n  if (!capabilities.has(\"createInscription\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create file inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"The wallet does not support this feature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create file inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Creates an inscription from a desired file with specified content type. The inscription will be sent to your ordinals address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A service fee and service fee address can be added to the inscription request as part of the payload if desired.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Content type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: contentType,\n          onChange: e => setContentType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: onFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateClick,\n        children: \"Create inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBinaryInscription, \"cHscBJCiQVij8WnbuNnfh4k64lc=\");\n_c = CreateBinaryInscription;\nexport default CreateBinaryInscription;\nvar _c;\n$RefreshReg$(_c, \"CreateBinaryInscription\");","map":{"version":3,"names":["useState","createInscription","jsxDEV","_jsxDEV","CreateBinaryInscription","network","capabilities","_s","content","setContent","contentType","setContentType","onCreateClick","payload","type","payloadType","onFinish","response","alert","txId","onCancel","error","message","onFileSelect","e","_e$target$files","selectedFile","target","files","reader","FileReader","onload","_e$target","contentString","result","base64String","split","readAsDataURL","has","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/metehan/Downloads/ord/sats-connect-example-main 2/src/components/createFileInscription.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport type { Capability } from \"sats-connect\";\nimport { BitcoinNetworkType, createInscription } from \"sats-connect\";\n\ntype Props = {\n  network: BitcoinNetworkType;\n  capabilities: Set<Capability>;\n};\n\nconst CreateBinaryInscription = ({ network, capabilities }: Props) => {\n  const [content, setContent] = useState<string>(\"\");\n  const [contentType, setContentType] = useState<string>(\"image/jpeg\");\n\n  const onCreateClick = async () => {\n    try {\n      await createInscription({\n        payload: {\n          network: {\n            type: network,\n          },\n          contentType,\n          content,\n          payloadType: \"BASE_64\",\n          /** Optional parameters:\n          appFeeAddress, // the address where the inscription fee should go\n          appFee: 1000 // the amount of sats that should be sent to the fee address\n          */\n        },\n        onFinish: (response) => {\n          alert(response.txId);\n        },\n        onCancel: () => alert(\"Canceled\"),\n      });\n    } catch (error) {\n      alert(`An error ocurred: ${error.message}`);\n    }\n  };\n\n  const onFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFile = e.target.files?.[0];\n    if (!selectedFile) {\n      setContent(\"\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const contentString = e.target?.result as string;\n      if (!contentString) {\n        return;\n      }\n\n      const base64String = contentString.split(\",\")[1];\n      setContent(base64String);\n    };\n    reader.readAsDataURL(selectedFile);\n  };\n\n  if (!capabilities.has(\"createInscription\")) {\n    return (\n      <div className=\"container\">\n        <h3>Create file inscription</h3>\n        <b>The wallet does not support this feature</b>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h3>Create file inscription</h3>\n      <p>\n        Creates an inscription from a desired file with specified content type.\n        The inscription will be sent to your ordinals address.\n      </p>\n      <p>\n        A service fee and service fee address can be added to the inscription\n        request as part of the payload if desired.\n      </p>\n      <div>\n        <p>\n          <b>Content type</b>\n          <br />\n          <input\n            value={contentType}\n            onChange={(e) => setContentType(e.target.value)}\n          />\n        </p>\n        <p>\n          <b>Content</b>\n          <br />\n          {content}\n          <br />\n          <input type=\"file\" onChange={onFileSelect} />\n        </p>\n        <button onClick={onCreateClick}>Create inscription</button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateBinaryInscription;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}