{"ast":null,"code":"import _objectSpread from \"/Users/metehan/Downloads/ord/sats-connect-example-main 2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac as _hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n  return {\n    hash: hash,\n    hmac: function hmac(key) {\n      for (var _len = arguments.length, msgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        msgs[_key - 1] = arguments[_key];\n      }\n      return _hmac(hash, key, concatBytes.apply(void 0, msgs));\n    },\n    randomBytes: randomBytes\n  };\n}\nexport function createCurve(curveDef, defHash) {\n  var create = function create(hash) {\n    return weierstrass(_objectSpread(_objectSpread({}, curveDef), getHash(hash)));\n  };\n  return Object.freeze(_objectSpread(_objectSpread({}, create(defHash)), {}, {\n    create: create\n  }));\n}\n//# sourceMappingURL=_shortw_utils.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}