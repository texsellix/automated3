{"ast":null,"code":"import _regeneratorRuntime from\"/Users/metehan/Downloads/ord/sats-connect-example-main 2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/Users/metehan/Downloads/ord/sats-connect-example-main 2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/metehan/Downloads/ord/sats-connect-example-main 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{signTransaction}from\"sats-connect\";import*as btc from\"@scure/btc-signer\";import{createPSBT,getUTXOs}from\"../utils\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignTransaction=function SignTransaction(_ref){var network=_ref.network,ordinalsAddress=_ref.ordinalsAddress,paymentAddress=_ref.paymentAddress,paymentPublicKey=_ref.paymentPublicKey,ordinalsPublicKey=_ref.ordinalsPublicKey,capabilities=_ref.capabilities;var onSignTransactionClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,paymentUnspentOutputs,ordinalsUnspentOutputs,canContinue,outputRecipient1,outputRecipient2,psbtBase64;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([getUTXOs(network,paymentAddress),getUTXOs(network,ordinalsAddress)]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);paymentUnspentOutputs=_yield$Promise$all2[0];ordinalsUnspentOutputs=_yield$Promise$all2[1];canContinue=true;if(paymentUnspentOutputs.length===0){alert(\"No unspent outputs found for payment address\");canContinue=false;}if(ordinalsUnspentOutputs.length===0){alert(\"No unspent outputs found for ordinals address\");canContinue=false;}if(canContinue){_context.next=11;break;}return _context.abrupt(\"return\");case 11:// create psbt sending from payment address to ordinals address\noutputRecipient1=ordinalsAddress;outputRecipient2=paymentAddress;_context.next=15;return createPSBT(network,paymentPublicKey,ordinalsPublicKey,paymentUnspentOutputs,ordinalsUnspentOutputs,outputRecipient1,outputRecipient2);case 15:psbtBase64=_context.sent;_context.next=18;return signTransaction({payload:{network:{type:network},message:\"Sign Transaction\",psbtBase64:psbtBase64,broadcast:false,inputsToSign:[{address:paymentAddress,signingIndexes:[0],sigHash:btc.SignatureHash.SINGLE|btc.SignatureHash.ANYONECANPAY},{address:ordinalsAddress,signingIndexes:[1],sigHash:btc.SignatureHash.SINGLE|btc.SignatureHash.ANYONECANPAY}]},onFinish:function onFinish(response){alert(response.psbtBase64);},onCancel:function onCancel(){return alert(\"Canceled\");}});case 18:case\"end\":return _context.stop();}},_callee);}));return function onSignTransactionClick(){return _ref2.apply(this,arguments);};}();if(!capabilities.has(\"signTransaction\")){return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Sign transaction\"}),/*#__PURE__*/_jsx(\"b\",{children:\"The wallet does not support this feature\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Sign transaction\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Creates a PSBT sending the first UTXO from each of the payment and ordinal addresses to the other address, with the change going to the payment address.\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:onSignTransactionClick,children:\"Sign Transaction\"})})]});};export default SignTransaction;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}