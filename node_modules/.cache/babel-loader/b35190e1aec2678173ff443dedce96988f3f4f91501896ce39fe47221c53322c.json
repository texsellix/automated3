{"ast":null,"code":"var _jsxFileName = \"/Users/metehan/Downloads/ord/sats-connect-example-main 2/src/components/createTextInscription.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createInscription } from \"sats-connect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTextInscription = ({\n  network,\n  capabilities\n}) => {\n  _s();\n  const [suggestedMinerFeeRate, setSuggestedMinerFeeRate] = useState(8);\n  const [content, setContent] = useState(`<html>\n    <body\n      style=\"\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n      \"\n    >\n      <p>Hello World!</p>\n      <p>I am recursive!!</p>\n      <img\n        src=\"/content/6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0\"\n      />\n      <div id=\"content\">Fetching current block height...</div>\n      <script>\n        const fetchBlockheight = () =>\n          fetch(\"/blockheight\")\n            .then((response) => response.text())\n            .then((data) => {\n              document.getElementById(\"content\").textContent =\n                \"Current block height: \" + data;\n            })\n            .catch(console.error);\n        setTimeout(fetchBlockheight, 2000);\n      </script>\n    </body>\n  </html>\n`);\n  const [contentType, setContentType] = useState(\"text/html\");\n  const onCreateClick = async () => {\n    try {\n      await createInscription({\n        payload: {\n          network: {\n            type: network\n          },\n          contentType,\n          content,\n          payloadType: \"PLAIN_TEXT\",\n          /** Optional parameters:\n          appFeeAddress: \"\", // the address where the inscription fee should go\n          appFee: 1000, // the amount of sats that should be sent to the fee address\n          */\n          suggestedMinerFeeRate\n        },\n        onFinish: response => {\n          alert(response.txId);\n        },\n        onCancel: () => alert(\"Canceled\")\n      });\n    } catch (error) {\n      alert(`An error ocurred: ${error.message}`);\n    }\n  };\n  if (!capabilities.has(\"createInscription\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create file inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"The wallet does not support this feature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create text inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Creates an inscription with the desired text and content type. The inscription will be sent to your ordinals address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A service fee and service fee address can be added to the inscription request as part of the payload if desired.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Content type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: contentType,\n          onChange: e => setContentType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Fee rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: suggestedMinerFeeRate,\n          onChange: e => {\n            const newFeeRate = Number(e.target.value);\n            setSuggestedMinerFeeRate(Number.isNaN(newFeeRate) ? 0 : newFeeRate);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateClick,\n        children: \"Create inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTextInscription, \"PCKJDDxk97J/BR1k9lKPBZ4lT4M=\");\n_c = CreateTextInscription;\nexport default CreateTextInscription;\nvar _c;\n$RefreshReg$(_c, \"CreateTextInscription\");","map":{"version":3,"names":["useState","createInscription","jsxDEV","_jsxDEV","CreateTextInscription","network","capabilities","_s","suggestedMinerFeeRate","setSuggestedMinerFeeRate","content","setContent","contentType","setContentType","onCreateClick","payload","type","payloadType","onFinish","response","alert","txId","onCancel","error","message","has","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","newFeeRate","Number","isNaN","onClick","_c","$RefreshReg$"],"sources":["/Users/metehan/Downloads/ord/sats-connect-example-main 2/src/components/createTextInscription.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport type { Capability } from \"sats-connect\";\nimport { BitcoinNetworkType, createInscription } from \"sats-connect\";\n\ntype Props = {\n  network: BitcoinNetworkType;\n  capabilities: Set<Capability>;\n};\n\nconst CreateTextInscription = ({ network, capabilities }: Props) => {\n  const [suggestedMinerFeeRate, setSuggestedMinerFeeRate] = useState<number>(8);\n\n  const [content, setContent] = useState<string>(\n    `<html>\n    <body\n      style=\"\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n      \"\n    >\n      <p>Hello World!</p>\n      <p>I am recursive!!</p>\n      <img\n        src=\"/content/6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0\"\n      />\n      <div id=\"content\">Fetching current block height...</div>\n      <script>\n        const fetchBlockheight = () =>\n          fetch(\"/blockheight\")\n            .then((response) => response.text())\n            .then((data) => {\n              document.getElementById(\"content\").textContent =\n                \"Current block height: \" + data;\n            })\n            .catch(console.error);\n        setTimeout(fetchBlockheight, 2000);\n      </script>\n    </body>\n  </html>\n`\n  );\n  const [contentType, setContentType] = useState<string>(\"text/html\");\n  const onCreateClick = async () => {\n    try {\n      await createInscription({\n        payload: {\n          network: {\n            type: network,\n          },\n          contentType,\n          content,\n          payloadType: \"PLAIN_TEXT\",\n          /** Optional parameters:\n          appFeeAddress: \"\", // the address where the inscription fee should go\n          appFee: 1000, // the amount of sats that should be sent to the fee address\n          */\n          suggestedMinerFeeRate,\n        },\n        onFinish: (response) => {\n          alert(response.txId);\n        },\n        onCancel: () => alert(\"Canceled\"),\n      });\n    } catch (error) {\n      alert(`An error ocurred: ${error.message}`);\n    }\n  };\n\n  if (!capabilities.has(\"createInscription\")) {\n    return (\n      <div className=\"container\">\n        <h3>Create file inscription</h3>\n        <b>The wallet does not support this feature</b>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h3>Create text inscription</h3>\n      <p>\n        Creates an inscription with the desired text and content type. The\n        inscription will be sent to your ordinals address.\n      </p>\n      <p>\n        A service fee and service fee address can be added to the inscription\n        request as part of the payload if desired.\n      </p>\n      <div>\n        <p>\n          <b>Content type</b>\n          <br />\n          <input\n            value={contentType}\n            onChange={(e) => setContentType(e.target.value)}\n          />\n        </p>\n        <p>\n          <b>Content</b>\n          <br />\n          <textarea\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </p>\n        <p>\n          <b>Fee rate</b>\n          <br />\n          <input\n            value={suggestedMinerFeeRate}\n            onChange={(e) => {\n              const newFeeRate = Number(e.target.value);\n              setSuggestedMinerFeeRate(\n                Number.isNaN(newFeeRate) ? 0 : newFeeRate\n              );\n            }}\n          />\n        </p>\n        <button onClick={onCreateClick}>Create inscription</button>\n      </div>\n    </div>\n  );\n};\n\nexport default CreateTextInscription;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAA6BC,iBAAiB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOrE,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGT,QAAQ,CAAS,CAAC,CAAC;EAE7E,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CACnC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CACE,CAAC;EACD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAS,WAAW,CAAC;EACnE,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMb,iBAAiB,CAAC;QACtBc,OAAO,EAAE;UACPV,OAAO,EAAE;YACPW,IAAI,EAAEX;UACR,CAAC;UACDO,WAAW;UACXF,OAAO;UACPO,WAAW,EAAE,YAAY;UACzB;AACV;AACA;AACA;UACUT;QACF,CAAC;QACDU,QAAQ,EAAGC,QAAQ,IAAK;UACtBC,KAAK,CAACD,QAAQ,CAACE,IAAI,CAAC;QACtB,CAAC;QACDC,QAAQ,EAAEA,CAAA,KAAMF,KAAK,CAAC,UAAU;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdH,KAAK,CAAE,qBAAoBG,KAAK,CAACC,OAAQ,EAAC,CAAC;IAC7C;EACF,CAAC;EAED,IAAI,CAAClB,YAAY,CAACmB,GAAG,CAAC,mBAAmB,CAAC,EAAE;IAC1C,oBACEtB,OAAA;MAAKuB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBxB,OAAA;QAAAwB,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChC5B,OAAA;QAAAwB,QAAA,EAAG;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV;EAEA,oBACE5B,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxB,OAAA;MAAAwB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC5B,OAAA;MAAAwB,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ5B,OAAA;MAAAwB,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAG;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnB5B,OAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN5B,OAAA;UACE6B,KAAK,EAAEpB,WAAY;UACnBqB,QAAQ,EAAGC,CAAC,IAAKrB,cAAc,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACJ5B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAG;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACd5B,OAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN5B,OAAA;UACE6B,KAAK,EAAEtB,OAAQ;UACfuB,QAAQ,EAAGC,CAAC,IAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACJ5B,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAG;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACf5B,OAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN5B,OAAA;UACE6B,KAAK,EAAExB,qBAAsB;UAC7ByB,QAAQ,EAAGC,CAAC,IAAK;YACf,MAAME,UAAU,GAAGC,MAAM,CAACH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YACzCvB,wBAAwB,CACtB4B,MAAM,CAACC,KAAK,CAACF,UAAU,CAAC,GAAG,CAAC,GAAGA,UACjC,CAAC;UACH;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACJ5B,OAAA;QAAQoC,OAAO,EAAEzB,aAAc;QAAAa,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CApHIH,qBAAqB;AAAAoC,EAAA,GAArBpC,qBAAqB;AAsH3B,eAAeA,qBAAqB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}