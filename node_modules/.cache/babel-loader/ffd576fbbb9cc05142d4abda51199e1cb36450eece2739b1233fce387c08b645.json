{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signMessage = void 0;\nconst jsontokens_1 = require(\"jsontokens\");\nconst provider_1 = require(\"../provider\");\nconst signMessage = async options => {\n  const provider = await (0, provider_1.getProviderOrThrow)(options.getProvider);\n  const {\n    address,\n    message\n  } = options.payload;\n  if (!address) {\n    throw new Error('An address is required to sign a message');\n  }\n  if (!message) {\n    throw new Error('A message to be signed is required');\n  }\n  try {\n    const request = (0, jsontokens_1.createUnsecuredToken)(options.payload);\n    const response = await provider.signMessage(request);\n    options.onFinish?.(response);\n  } catch (error) {\n    console.error('[Connect] Error during sign message request', error);\n    options.onCancel?.();\n  }\n};\nexports.signMessage = signMessage;\n__exportStar(require(\"./types\"), exports);\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}